@model BusinessLayer.DTOS.InvoiceDetailsModels.InvoiceViewModel

@{
    ViewData["Title"] = "Create Invoice";
}

<h1>Create Invoice</h1>

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="InvoiceHeader.CustomerName" class="control-label"></label>
        <input asp-for="InvoiceHeader.CustomerName" class="form-control" />
        <span asp-validation-for="InvoiceHeader.CustomerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="InvoiceHeader.Invoicedate" class="control-label"></label>
        <input asp-for="InvoiceHeader.Invoicedate" class="form-control" type="date" />
        <span asp-validation-for="InvoiceHeader.Invoicedate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="InvoiceHeader.BranchId" class="control-label">Branch</label>
        <select asp-for="InvoiceHeader.BranchId" class="form-control" asp-items="ViewBag.Branches" id="branchDropdown"></select>
        <span asp-validation-for="InvoiceHeader.BranchId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="InvoiceHeader.CashierId" class="control-label">Cashier</label>
        <select asp-for="InvoiceHeader.CashierId" class="form-control" id="cashierDropdown">
            <option value="">Select a branch first</option>
        </select>
        <span asp-validation-for="InvoiceHeader.CashierId" class="text-danger"></span>
    </div>

    <h3>Invoice Items</h3>
    <table class="table" id="invoiceDetailsTable">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Item Count</th>
                <th>Item Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <input name="InvoiceDetails[0].ItemName" class="form-control" />
                </td>
                <td>
                    <input name="InvoiceDetails[0].ItemCount" class="form-control" />
                </td>
                <td>
                    <input name="InvoiceDetails[0].ItemPrice" class="form-control" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="removeItem(this)">Remove</button>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group">
        <button type="button" class="btn btn-secondary" onclick="addItem()">Add New Item</button>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let itemCount = 1;

        function addItem() {
            const table = document.getElementById('invoiceDetailsTable').getElementsByTagName('tbody')[0];
            const newRow = table.insertRow();

            newRow.innerHTML = `
                        <td>
                            <input name="InvoiceDetails[${itemCount}].ItemName" class="form-control" />
                        </td>
                        <td>
                            <input name="InvoiceDetails[${itemCount}].ItemCount" class="form-control" />
                        </td>
                        <td>
                            <input name="InvoiceDetails[${itemCount}].ItemPrice" class="form-control" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeItem(this)">Remove</button>
                        </td>
                    `;
            itemCount++;
        }

        function removeItem(element) {
            const row = element.closest('tr');
            row.remove();
        }

        // JavaScript to load cashiers based on selected branch
        document.getElementById('branchDropdown').addEventListener('change', function () {
            var branchId = this.value;
            var cashierDropdown = document.getElementById('cashierDropdown');

            // Clear previous options
            cashierDropdown.innerHTML = '<option value="">Select a cashier</option>';

            if (branchId) {
                fetch(`/Invoice/GetCashiersByBranch?branchId=${branchId}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data); // Log the response to check its structure
                        cashierDropdown.innerHTML = '<option value="">Select a cashier</option>';
                        data.forEach(cashiers => {
                            console.log(cashiers); // Log each cashier object
                            var option = document.createElement('option');
                            option.value = cashiers.Id; // Ensure this matches your JSON structure
                            option.text = cashiers.cashierName; // Ensure this matches your JSON structure
                            cashierDropdown.add(option);
                        });
                    })
                    .catch(error => console.error('Error fetching cashiers:', error));
            }
        });
    </script>
}
